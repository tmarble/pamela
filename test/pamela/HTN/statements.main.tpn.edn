{:act-14
 {:args
  [{:type :equal,
    :args
    [{:type :state-variable, :name foo}
     {:type :literal, :value :illuminated}]}],
  :argsmap
  {"condition"
   {:args
    [{:type :state-variable, :name foo}
     {:type :literal, :value :illuminated}],
    :type :equal}},
  :command "assert",
  :constraints #{:tc-13},
  :controllable false,
  :display-name "Assert",
  :end-node :node-20,
  :htn-node :hem-23,
  :name
  "Assert({:type :equal, :args [{:type :state-variable, :name foo} {:type :literal, :value :illuminated}]})",
  :plantid "bsm1",
  :tpn-type :activity,
  :uid :act-14},
 :act-19
 {:args
  [{:type :equal,
    :args
    [{:type :state-variable, :name bar}
     {:type :literal, :value :dead}]}],
  :argsmap
  {"condition"
   {:args
    [{:type :state-variable, :name bar}
     {:type :literal, :value :dead}],
    :type :equal}},
  :command "ask",
  :constraints #{:tc-18},
  :controllable false,
  :display-name "Ask",
  :end-node :node-25,
  :htn-node :hem-23,
  :name
  "Ask({:type :equal, :args [{:type :state-variable, :name bar} {:type :literal, :value :dead}]})",
  :plantid "bsm1",
  :tpn-type :activity,
  :uid :act-19},
 :act-24
 {:args
  [{:type :equal,
    :args
    [{:type :field-ref, :names [field1 simple2]}
     {:type :literal, :value "white"}]}],
  :argsmap
  {"condition"
   {:args
    [{:type :field-ref, :names [field1 simple2]}
     {:type :literal, :value "white"}],
    :type :equal}},
  :command "ask",
  :constraints #{:tc-23},
  :controllable false,
  :display-name "Ask",
  :end-node :node-29,
  :htn-node :hem-23,
  :name
  "Ask({:type :equal, :args [{:type :field-ref, :names [field1 simple2]} {:type :literal, :value \"white\"}]})",
  :plantid "bsm1",
  :tpn-type :activity,
  :uid :act-24},
 :act-28
 {:args
  [{:type :equal,
    :args
    [{:type :state-variable, :name door}
     {:type :literal, :value :open}]}],
  :argsmap
  {"condition"
   {:args
    [{:type :state-variable, :name door}
     {:type :literal, :value :open}],
    :type :equal}},
  :command "tell",
  :constraints #{},
  :controllable false,
  :display-name "Tell",
  :end-node :node-33,
  :htn-node :hem-23,
  :name
  "Tell({:type :equal, :args [{:type :state-variable, :name door} {:type :literal, :value :open}]})",
  :plantid "bsm1",
  :tpn-type :activity,
  :uid :act-28},
 :act-32
 {:args [],
  :argsmap {},
  :command "initialize",
  :constraints #{},
  :controllable false,
  :cost 0,
  :display-name "Initialize",
  :end-node :node-1,
  :htn-node :hem-23,
  :name "Initialize",
  :reward 0,
  :tpn-type :activity,
  :uid :act-32},
 :act-9
 {:args [field1.simple2],
  :argsmap {"x" field1.simple2},
  :command "one-arg-method",
  :constraints #{},
  :controllable false,
  :cost 0,
  :display-name "One Arg Method",
  :end-node :node-15,
  :htn-node :hem-23,
  :name "One Arg Method(field1.simple2)",
  :reward 0,
  :tpn-type :activity,
  :uid :act-9},
 :net-3
 {:begin-node :node-10,
  :end-node :node-1,
  :tpn-type :network,
  :uid :net-3},
 :network-id :net-3,
 :node-1
 {:activities #{},
  :constraints #{},
  :incidence-set #{:act-32},
  :tpn-type :state,
  :uid :node-1},
 :node-10
 {:activities #{:act-9},
  :constraints #{},
  :end-node :node-1,
  :htn-node :hem-16,
  :incidence-set #{},
  :tpn-type :state,
  :uid :node-10},
 :node-15
 {:activities #{:act-14},
  :constraints #{},
  :htn-node :hem-23,
  :incidence-set #{:act-9},
  :tpn-type :state,
  :uid :node-15},
 :node-20
 {:activities #{:act-19},
  :constraints #{},
  :htn-node :hem-23,
  :incidence-set #{:act-14},
  :tpn-type :state,
  :uid :node-20},
 :node-25
 {:activities #{:act-24},
  :constraints #{},
  :htn-node :hem-23,
  :incidence-set #{:act-19},
  :tpn-type :state,
  :uid :node-25},
 :node-29
 {:activities #{:act-28},
  :constraints #{},
  :htn-node :hem-23,
  :incidence-set #{:act-24},
  :tpn-type :state,
  :uid :node-29},
 :node-33
 {:activities #{:act-32},
  :constraints #{},
  :htn-node :hem-23,
  :incidence-set #{:act-28},
  :tpn-type :state,
  :uid :node-33},
 :tc-13
 {:end-node :node-20,
  :tpn-type :temporal-constraint,
  :uid :tc-13,
  :value [3 5]},
 :tc-18
 {:end-node :node-25,
  :tpn-type :temporal-constraint,
  :uid :tc-18,
  :value [4 7]},
 :tc-23
 {:end-node :node-29,
  :tpn-type :temporal-constraint,
  :uid :tc-23,
  :value [4 7]}}
